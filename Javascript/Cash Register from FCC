// Solved using dynamic programming

function checkCashRegister(price, cash, cid) {
  const coins = {
    "PENNY": 1,
    "NICKEL": 5,
    "DIME": 10,
    "QUARTER": 25,
    "ONE": 100,
    "FIVE": 500,
    "TEN": 1000,
    "TWENTY": 2000,
    "ONE HUNDRED": 10000
  }
  
  let cidSum = 0
  for (let drawerRecord of cid){
    cidSum += drawerRecord[1];
  }
  cidSum *= 100;

  let change = (cash - price)*100;
  
  if(cidSum == change){
    return {
      "status": "CLOSED",
      "change": cid
    };
  } 
  else if (cidSum < change){
    return {
      "status": "INSUFFICIENT_FUNDS",
      "change": []
    };
  }
  else {
    let map = new Array(change + 1).fill(0);
    map[0] = {
      "PENNY": 0,
      "NICKEL": 0,
      "DIME": 0,
      "QUARTER": 0,
      "ONE": 0,
      "FIVE": 0,
      "TEN": 0,
      "TWENTY": 0,
      "ONE HUNDRED": 0
      };

    for (let i = cid.length - 1; i >= 0; i--){
      const coin = cid[i][0];

      for (let parsed = change; parsed >= 0; parsed--){
        let coinAmount = cid[i][1] * 100 / coins[coin];

        if (map[parsed] != 0){
          let curState = {...map[parsed]};

          for (let jump = parsed + coins[coin]; jump <= change && coinAmount > 0; jump += coins[coin]){
            curState[coin] += coins[coin];
            coinAmount--;

            if (map[jump] == 0){
              map[jump] = {...curState};
            } else {
              continue
            }
          }
        }
      }
    }
    if (map[change] != 0){
      let returnFunds = [];
      for (let key in map[change]){
        if(map[change][key] != 0){
          returnFunds.unshift([key, map[change][key]/100])
        }
      }
      return {
        "status": "OPEN",
        "change": returnFunds
      }
    }
    else {
      return {
      "status": "INSUFFICIENT_FUNDS",
      "change": []
      };  
    }
  }
}

console.log(checkCashRegister(3.26, 100, [["PENNY", 1.01], ["NICKEL", 2.05], ["DIME", 3.1], ["QUARTER", 4.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]]));
